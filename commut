/*
	This brief code for internet connection is obtained and modified from the Microsoft
	website for the term project of NTUST ME2008303 class, 2019.
	Author: Yu-Hsuan Su
			National Taiwan University of Science and Technology
			Department of Mechanical Engineering
*/

#include <stdio.h>
#include "inet.h"
#include <time.h>
#pragma warning(disable:4996)

// #define CLIENT
#define SERVER
#define DEBUG

int __cdecl main(int argc, char **argv)
{
#ifdef CLIENT
	char *ipaddr, str[512] = "Client connecting...\n";

	// server's ip address for testing and debugging
	char ipaddr_test[] = "140.118.199.150";

	// Validate the arguments
	if (argc != 2) {
#ifdef DEBUG
		// using default ip address for testing
		ipaddr = ipaddr_test;
#else
		printf("usage: %s server-name\n", argv[0]);
		return 1;
#endif
	}
	else
		ipaddr = argv[1];

	// try to connect to server
	printf("%s", str); client_connect(ipaddr);

	// interactive process
	do {
		// prompt for input
		printf(" <A> : "); fgets(str, sizeof(str), stdin);

		// To end connection, put @ as the first character.
		if (str[0] == '@') return 0;

		// remove the newline character obtained by fgets()
		int i = 0; while (str[i] != '\n') i++; str[i] = '\0';

		// send message to server
		send_str(str);

		// receive response from server
		recv_str();
	} while (1);

	// end connection
	inet_shutdown();
#endif // CLIENT





#ifdef SERVER

	char str[512] = "Server ~ waiting...\n";

	// waiting for client to connect
	printf("%s", str); server_listen();

	srand(time(NULL));
	int player = 2;
	int card_num = 52;
	int round = card_num / player;
	int card[2][28];
	int card_all[54];
	char color[4][5] = { "黑桃","紅心","方塊","梅花" };
	char point[13][3] = { "A","2","3","4","5","6","7","8","9","T","J","Q","K" };//
	int play_card;


	for (int i = 0; i < card_num; i++) card_all[i] = i;
	for (int j = 0; j < round; j++) { //發牌 X 回
		for (int i = 0; i < player; i++) {
			play_card = rand() % card_num;
			card[i][j] = card_all[play_card];
			card_all[play_card] = card_all[card_num - 1];
			card_num--;
		}
	}

	for (int i = 0; i < player; i++) //從玩家1開始依照大小排手牌。
	{
		for (int k = 1; k < round; k++)//總共需要檢查的次數
		{
			for (int j = 0; j < round - k; j++)//[玩家I][第J張牌] 第1回向後檢查25次，第2回向後檢查24次....
			{
				if (card[i][j] > card[i][j + 1])//如果第X張牌數字>X+1(後方)那麼將兩者互換。
				{
					int temp = card[i][j];
					card[i][j] = card[i][j + 1];
					card[i][j + 1] = temp;
				}
			}
		}
	}

	//將號碼對應的撲克牌列出
	printf("玩家%d：\n", 1);
	for (int j = 0; j < round; j++)
	{
		if (card[0][j] == 52 || card[0][j] == 53)//沒有花色的鬼牌
		{
			printf("JOKER");
		}
		else {
			printf("%s_", color[card[0][j] % 4]);
			printf("%s", point[card[0][j] / 4]);
		}

		if (j != round - 1)printf(" , ");
		else printf("\n\n");
	}

	char plar2Card[100] = "";
	for (int j = 0; j < round; j++)
	{
		if (card[1][j] == 52 || card[1][j] == 53)//沒有花色的鬼牌
		{
			printf("JOKER");
		}
		else {
			strcat(plar2Card, color[card[1][j] % 4]);
			strcat(plar2Card, point[card[1][j] / 4]);
			printf("%s, \n", plar2Card);
			/*printf("%s_", color[card[1][j] % 4]);
			printf("%s", point[card[1][j] / 4]);*/
		}

		/*if (j != round - 1)printf(" , ");
		else printf("\n\n");*/
	}

	do {
		// receive request from client
		recv_str();

		char mystr[512] = "Server ### waiting...\n";
		// prompt for input
		printf(" <A> : "); fgets(str, sizeof(str), stdin);

		// To end connection, put @ as the first character
		if (str[0] == '@') return 0;

		// remove the newline character obtained by fgets()
		int i = 0;  while (str[i] != '\n') i++; str[i] = '\0';

		// send response to client
		send_str(plar2Card);
	} while (1);

	// end connection
	inet_shutdown();
#endif // SERVER
}
